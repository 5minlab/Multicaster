// <auto-generated/>
#nullable enable
#pragma warning disable CS0108
#pragma warning disable CS0162
#pragma warning disable CS0164
#pragma warning disable CS0219
#pragma warning disable CS8600
#pragma warning disable CS8601
#pragma warning disable CS8602
#pragma warning disable CS8604
#pragma warning disable CS8619
#pragma warning disable CS8620
#pragma warning disable CS8631
#pragma warning disable CS8765
#pragma warning disable CS9074
#pragma warning disable CA1050

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
namespace Multicaster.Tests
{

    partial struct InMemoryGroupProviderProxy
    {

        global::Cysharp.Runtime.Multicast.InMemory.InMemoryGroupProvider target;

        public InMemoryGroupProviderProxy(global::Cysharp.Runtime.Multicast.InMemory.InMemoryGroupProvider target)
        {
            this.target = target;
        }

        [UnsafeAccessor(UnsafeAccessorKind.Field, Name = "_groups")]
        static extern ref readonly global::System.Collections.Concurrent.ConcurrentDictionary<(global::System.Type KeyType, global::System.Type ReceiverType, string name), object> ___groups__(global::Cysharp.Runtime.Multicast.InMemory.InMemoryGroupProvider target);

        public ref readonly global::System.Collections.Concurrent.ConcurrentDictionary<(global::System.Type KeyType, global::System.Type ReceiverType, string name), object> _groups => ref ___groups__(this.target);
        [UnsafeAccessor(UnsafeAccessorKind.Field, Name = "_proxyFactory")]
        static extern ref readonly global::Cysharp.Runtime.Multicast.InMemory.IInMemoryProxyFactory ___proxyFactory__(global::Cysharp.Runtime.Multicast.InMemory.InMemoryGroupProvider target);

        public ref readonly global::Cysharp.Runtime.Multicast.InMemory.IInMemoryProxyFactory _proxyFactory => ref ___proxyFactory__(this.target);
    }

    internal static class InMemoryGroupProviderPrivateProxyExtensions
    {
        public static global::Multicaster.Tests.InMemoryGroupProviderProxy AsPrivateProxy(this global::Cysharp.Runtime.Multicast.InMemory.InMemoryGroupProvider target)
        {
            return new global::Multicaster.Tests.InMemoryGroupProviderProxy(target);
        }
    }

}
